# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  test:
    docker:
      - image: circleci/node:9-browsers
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run: yarn
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: yarn dev
      - run: npx wait-on http://localhost:3000
      - run: yarn test:integration --record --key $DEVISE_CYPRESS_TOKEN
  build:
    docker:
      - image: circleci/node:9
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run: yarn
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: yarn build
  deploy_staging:
    docker:
      - image: circleci/node:9
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # Fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: yarn
      - run: yarn build
      - run: npx now dist -p -C -t $NOW_TOKEN -T multi-cell -n devise-staging

  deploy_prod:
    docker:
      - image: circleci/node:9
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # Fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: yarn
      - run: yarn build
      - run: npx now dist -p -C -t $NOW_TOKEN -T multi-cell -n devise

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - test
      - build
      - deploy_staging:
          context: org-global
          requires: 
            - test
            - build
          filters:
            branches:
              only: dev
      - deploy_prod:
          type: approval
          context: org-global
          requires:
            - test
            - build
          filters:
            branches:
              only: master
